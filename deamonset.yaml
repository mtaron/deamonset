apiVersion: v1
kind: Namespace
metadata:
  name: kernel-downgrade
  labels:
    name: kernel-downgrade
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsenter-actions
  namespace: kernel-downgrade
  labels:
    app: nsenter
data:
  downgrade: |
    #!/usr/bin/env bash
    set -x

    export IGNORE_CC_MISMATCH="1"

    downgrade_sentinel=/opt/downgrade-sentinel
    restart_sentinel=/opt/restart-sentinel
    if [[ -f $restart_sentinel ]]; then
      echo "Already restarted, exiting"
      exit 0
    fi

    node=$(echo $HOSTNAME | tr '[:upper:]' '[:lower:]')
    if [[ -f $downgrade_sentinel ]]; then
      echo "Kernel updated to $(uname -a). Uncordoning node $node"
      touch $restart_sentinel
      kubectl uncordon $node --kubeconfig /var/lib/kubelet/kubeconfig
      kubectl --kubeconfig /var/lib/kubelet/kubeconfig label node $node docugami.com/kernel-downgrade=complete --overwrite
      exit 0
    fi

    # Mark node as unschedulable
    echo "Cordoning node $node"
    kubectl cordon $node --kubeconfig /var/lib/kubelet/kubeconfig
    kubectl --kubeconfig /var/lib/kubelet/kubeconfig label node $node docugami.com/kernel-downgrade=started --overwrite

    # Wait for apt lock to release
    while fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1; do sleep 1; done

    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

    # Downgrade to 5.15.0.1003.4
    kernel_version=5.15.0.1003.4
    apt-get update
    apt-get install --no-install-recommends --yes --allow-downgrades linux-azure=$kernel_version linux-image-azure=$kernel_version linux-headers-azure=$kernel_version linux-tools-azure=$kernel_version linux-cloud-tools-azure=$kernel_version

    # Set grub entrypoint to saved
    sed -e 's|GRUB_DEFAULT=0|GRUB_DEFAULT=saved|g' -i /etc/default/grub

    # Set default kernel to the old kernel
    # Use 'cat /boot/grub/grub.cfg' to find the menu path
    grub-set-default 'Advanced options for Ubuntu>Ubuntu, with Linux 5.15.0-1003-azure'

    update-grub

    echo "Setting downgrade sentinel and rebooting once"
    touch $downgrade_sentinel
    systemctl reboot --force
  upgrade: |
    #!/usr/bin/env bash
    set -x

    upgrade_sentinel=/opt/upgrade-sentinel
    restart_sentinel=/opt/restart-sentinel
    if [[ -f $restart_sentinel ]]; then
      echo "Already restarted, exiting"
      exit 0
    fi

    node=$(echo $HOSTNAME | tr '[:upper:]' '[:lower:]')
    if [[ -f $upgrade_sentinel ]]; then
      echo "Kernel updated to $(uname -a). Uncordoning node $node"
      touch $restart_sentinel
      kubectl uncordon $node --kubeconfig /var/lib/kubelet/kubeconfig
      kubectl --kubeconfig /var/lib/kubelet/kubeconfig label node $node docugami.com/kernel-upgrade=complete --overwrite
      exit 0
    fi

    # Mark node as unschedulable
    echo "Cordoning node $node"
    kubectl cordon $node --kubeconfig /var/lib/kubelet/kubeconfig
    kubectl --kubeconfig /var/lib/kubelet/kubeconfig label node $node docugami.com/kernel-upgrade=started --overwrite

    # Wait for apt lock to release
    while fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1; do sleep 1; done

    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    apt-get update && apt-get dist-upgrade --yes

    echo "Setting upgrade sentinel and rebooting once"
    touch $upgrade_sentinel
    systemctl reboot --force
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: &name nsenter
  namespace: kernel-downgrade
  labels:
    app: *name
spec:
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      hostNetwork: true
      hostPID: true
      priorityClassName: system-node-critical
      tolerations:
        - operator: Exists  # matches all keys, values and effects
      containers:
      - image: docugami.azurecr.io/nsenter:latest
        imagePullPolicy: Always
        name: *name
        args: ["upgrade"]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        volumeMounts:
        - name: actions
          mountPath: "/opt/actions"
        - name: hostmount
          mountPath: "/mnt/actions"
      volumes:
      - name: hostmount
        hostPath:
          path: /opt/actions
          type: DirectoryOrCreate
      - name: actions
        configMap:
          name: nsenter-actions
